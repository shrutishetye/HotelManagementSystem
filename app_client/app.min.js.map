{"version":3,"sources":["app.min.js"],"names":["favCtrl","$http","authentication","$location","console","log","vm","this","rooms","roomsCtrl","currentPage","pageSize","numberOfPages","Math","ceil","length","book","room","name","type","booked","guests","beds","post","success","data","alert","path","error","e","get","headers","Authorization","getToken","config","$routeProvider","$locationProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","html5Mode","run","$rootScope","$on","event","nextRoute","currentRoute","isLoggedIn","angular","module","app","goToAdd","store","sessionStorage","JSON","stringify","r","onSubmit","parse","homeCtrl","$inject","profileCtrl","meanData","user","getProfile","filter","input","start","slice","loginCtrl","credentials","email","password","login","err","then","cUser","currentUser","registerCtrl","register","$window","saveToken","token","localStorage","payload","split","atob","exp","Date","now","logout","removeItem","service","navigationCtrl","navigation","restrict","directive"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\r\n\r\n  angular.module('meanApp', ['ngRoute']);\r\n\r\n  function config ($routeProvider, $locationProvider) {\r\n    $routeProvider\r\n    .when('/', {\r\n      templateUrl: 'home/home.view.html',\r\n      controller: 'homeCtrl',\r\n      controllerAs: 'vm'\r\n    })\r\n    .when('/register', {\r\n      templateUrl: '/auth/register/register.view.html',\r\n      controller: 'registerCtrl',\r\n      controllerAs: 'vm'\r\n    })\r\n    .when('/login', {\r\n      templateUrl: '/auth/login/login.view.html',\r\n      controller: 'loginCtrl',\r\n      controllerAs: 'vm'\r\n    })\r\n    .when('/profile', {\r\n      templateUrl: '/profile/profile.view.html',\r\n      controller: 'profileCtrl',\r\n      controllerAs: 'vm'\r\n    })\r\n    .when('/rooms', {\r\n      templateUrl: '/rooms/rooms.view.html',\r\n      controller: 'roomsCtrl',\r\n      controllerAs: 'vm'\r\n    })\r\n    .when('/add', {\r\n      templateUrl: '/admin/add.view.html',\r\n      controller: 'addRoomCtrl',\r\n      controllerAs: 'vm'\r\n    })\r\n    .when('/roomlist', {\r\n      templateUrl: '/admin/roomlist.view.html',\r\n      controller: 'roomlistCtrl',\r\n      controllerAs: 'vm'\r\n    })\r\n    .when('/update', {\r\n      templateUrl: '/admin/update.view.html',\r\n      controller: 'updateRoomCtrl',\r\n      controllerAs: 'vm'\r\n    })\r\n    .otherwise({redirectTo: '/'});\r\n\r\n    // use the HTML5 History API\r\n    $locationProvider.html5Mode(true);\r\n  }\r\n\r\n  function run($rootScope, $location, authentication) {\r\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\r\n      if ($location.path() === '/profile' && !authentication.isLoggedIn()) {\r\n        $location.path('/');\r\n      }\r\n      if ($location.path() === '/rooms' && !authentication.isLoggedIn()) {\r\n        $location.path('/');\r\n      }\r\n    });\r\n  }\r\n  \r\n  angular\r\n  .module('meanApp')\r\n  .config(['$routeProvider', '$locationProvider', config])\r\n  .run(['$rootScope', '$location', 'authentication', run]);\r\n\r\n})();\n\r\nvar app = angular.module('meanApp')\r\n\r\napp.controller('roomlistCtrl',['$http', 'authentication', '$location', function($http, authentication, $location) {\r\n  console.log(\"roomslist controller is running...\");\r\n  var vm = this\r\n  vm.rooms = []\r\n  $http.get('/api/rooms', {\r\n    headers: {\r\n      Authorization: 'Bearer '+ authentication.getToken()\r\n    }\r\n  }).success(function(data) {\r\n    console.log('response', data);\r\n    vm.rooms = data;\r\n  })\r\n  .error(function (e) {\r\n    console.log(e);\r\n  });\r\n\r\n  vm.goToAdd = function(){\r\n    $location.path('add');\r\n  }\r\n\r\n  vm.store = function(room){\r\n    console.log(room)\r\n    sessionStorage['room'] = JSON.stringify(room)\r\n     $location.path('update');\r\n  }\r\n\r\n  vm.delete = function(r){\r\n    $http.post('/api/admin/rooms/delete', {name: r.name}).success(function(data) {\r\n      console.log('response..', data);\r\n      $location.path('roomlist');\r\n    })\r\n    .error(function (e) {\r\n      console.log('error..', e);\r\n    });\r\n  }\r\n}]);\r\n\r\n\r\n\r\napp.controller('addRoomCtrl',['$http', 'authentication', '$location', function($http, authentication, $location) {\r\n  console.log(\"add rooms controller is running...\");\r\n  var vm = this\r\n  vm.room = {\r\n    name: '',\r\n    type:  '',\r\n    booked: '',\r\n    guests: '',\r\n    beds: ''\r\n  }\r\n  \r\n  vm.onSubmit = function () {\r\n    console.log('Submitting new form');\r\n    $http.post('/api/admin/rooms/add', vm.room).success(function(data) {\r\n      console.log('response..', data);\r\n      $location.path('roomlist');\r\n    })\r\n    .error(function (e) {\r\n      console.log('error..', e);\r\n    });\r\n  }\r\n\r\n}]);\r\n\r\napp.controller('updateRoomCtrl',['$http', 'authentication', '$location', function($http, authentication, $location) {\r\n  console.log(\"add rooms controller is running...\");\r\n  var vm = this\r\n  var room = JSON.parse(sessionStorage.room);\r\n  vm.room = {\r\n    name: room.name,\r\n    type:  room.type,\r\n    booked: room.booked,\r\n    guests: room.guests,\r\n    beds: room.beds\r\n  }\r\n  \r\n  vm.onSubmit = function () {\r\n    console.log('Submitting new form');\r\n    $http.post('/api/admin/rooms/update', vm.room).success(function(data) {\r\n      console.log('response..', data);\r\n      $location.path('roomlist');\r\n    })\r\n    .error(function (e) {\r\n      console.log('error..', e);\r\n    });\r\n  }\r\n\r\n}]);\r\n\n(function() {\r\n  \r\n  angular\r\n    .module('meanApp')\r\n    .controller('homeCtrl', homeCtrl);\r\n\r\n    function homeCtrl () {\r\n      console.log('Home controller is running');\r\n    }\r\n\r\n})();\n\r\nvar app = angular\r\n.module('meanApp')\r\n.controller('favCtrl', favCtrl); \r\n\r\nfavCtrl.$inject = ['$http','authentication','$location'];\r\nfunction favCtrl($http, authentication, $location) {\r\n  console.log(\"rooms controller is running...\");\r\n  var vm = this\r\n  vm.rooms = []\r\n  \r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n(function() {\r\n  \r\n  angular\r\n    .module('meanApp')\r\n    .controller('profileCtrl', profileCtrl);\r\n\r\n  profileCtrl.$inject = ['$location', 'meanData'];\r\n  function profileCtrl($location, meanData) {\r\n    console.log(\"profile controller is running...\");\r\n    var vm = this;\r\n\r\n    vm.user = {};\r\n\r\n    meanData.getProfile()\r\n      .success(function(data) {\r\n        console.log(\"profile controller is running...\");\r\n        vm.user = data;\r\n      })\r\n      .error(function (e) {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n})();\n\r\nvar app = angular\r\n.module('meanApp')\r\n.controller('roomsCtrl', roomsCtrl); \r\n\r\nroomsCtrl.$inject = ['$http','authentication','$location'];\r\nfunction roomsCtrl($http, authentication, $location) {\r\n  console.log(\"rooms controller is running...\");\r\n  var vm = this\r\n  vm.rooms = []\r\n  vm.currentPage = 0;\r\n  vm.pageSize = 5;\r\n  vm.numberOfPages=function(){\r\n    return Math.ceil(vm.rooms.length/vm.pageSize);                \r\n  }\r\n  \r\n  vm.book = function(room){\r\n    vm.room = {\r\n      name: room.name,\r\n      type:  room.type,\r\n      booked: 'Yes',\r\n      guests: room.guests,\r\n      beds: room.beds\r\n    }\r\n    $http.post('/api/admin/rooms/update', vm.room).success(function(data) {\r\n      alert(\"booked successfully\");\r\n      $location.path('rooms')\r\n    })\r\n    .error(function (e) {\r\n      console.log('error..', e);\r\n    });\r\n  }\r\n\r\n  $http.get('/api/rooms', {\r\n    headers: {\r\n      Authorization: 'Bearer '+ authentication.getToken()\r\n    }\r\n  }).success(function(data) {\r\n    console.log('response', data);\r\n    vm.rooms = data;\r\n  })\r\n  .error(function (e) {\r\n    console.log(e);\r\n  });\r\n}\r\n\r\napp.filter('startFrom', function() {\r\n  return function(input, start) {\r\n        start = +start; //parse to int\r\n        return input.slice(start);\r\n      }\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n(function () {\r\n\r\n  angular\r\n  .module('meanApp')\r\n  .controller('loginCtrl', loginCtrl);\r\n\r\n  loginCtrl.$inject = ['$location', 'authentication'];\r\n  function loginCtrl($location, authentication) {\r\n    var vm = this;\r\n\r\n    vm.credentials = {\r\n      email : \"\",\r\n      password : \"\"\r\n    };\r\n\r\n    vm.onSubmit = function () {\r\n      authentication.login(vm.credentials)\r\n      .error(function(err){\r\n        console.log(err);\r\n      }).then(function(){\r\n        console.log('login sucessfull')\r\n        var cUser = authentication.currentUser()\r\n        if(cUser.email == 'admin@staytoday.com'){\r\n          $location.path('roomlist');\r\n        }else{\r\n          $location.path('rooms');\r\n        }\r\n      });\r\n    };\r\n\r\n  }\r\n\r\n})();\n(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .controller('registerCtrl', registerCtrl);\r\n\r\n  registerCtrl.$inject = ['$location', 'authentication'];\r\n  function registerCtrl($location, authentication) {\r\n    var vm = this;\r\n\r\n    vm.credentials = {\r\n      name : \"\",\r\n      email : \"\",\r\n      password : \"\"\r\n    };\r\n\r\n    vm.onSubmit = function () {\r\n      console.log('Submitting registration');\r\n      authentication\r\n        .register(vm.credentials)\r\n        .error(function(err){\r\n          alert(err);\r\n        })\r\n        .then(function(){\r\n          $location.path('profile');\r\n        });\r\n    };\r\n\r\n  }\r\n\r\n})();\n(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .service('authentication', authentication);\r\n\r\n  authentication.$inject = ['$http', '$window'];\r\n  function authentication ($http, $window) {\r\n\r\n    var saveToken = function (token) {\r\n      console.log(\"getting token...\");\r\n      $window.localStorage['mean-token'] = token;\r\n    };\r\n\r\n    var getToken = function () {\r\n      console.log(\"getting token...\");\r\n      return $window.localStorage['mean-token'];\r\n    };\r\n\r\n    var isLoggedIn = function() {\r\n      var token = getToken();\r\n      var payload;\r\n\r\n      if(token){\r\n        payload = token.split('.')[1];\r\n        payload = $window.atob(payload);\r\n        payload = JSON.parse(payload);\r\n\r\n        return payload.exp > Date.now() / 1000;\r\n      } else {\r\n        return false;\r\n      }\r\n    };\r\n\r\n    var currentUser = function() {\r\n      if(isLoggedIn()){\r\n        var token = getToken();\r\n        var payload = token.split('.')[1];\r\n        payload = $window.atob(payload);\r\n        payload = JSON.parse(payload);\r\n        return {\r\n          email : payload.email,\r\n          name : payload.name\r\n        };\r\n      }\r\n    };\r\n\r\n    register = function(user) {\r\n      return $http.post('/api/register', user).success(function(data){\r\n        saveToken(data.token);\r\n      });\r\n    };\r\n\r\n    login = function(user) {\r\n      return $http.post('/api/login', user).success(function(data) {\r\n        saveToken(data.token);\r\n      });\r\n    };\r\n\r\n    logout = function() {\r\n      $window.localStorage.removeItem('mean-token');\r\n    };\r\n\r\n    return {\r\n      currentUser : currentUser,\r\n      saveToken : saveToken,\r\n      getToken : getToken,\r\n      isLoggedIn : isLoggedIn,\r\n      register : register,\r\n      login : login,\r\n      logout : logout\r\n    };\r\n  }\r\n\r\n\r\n})();\n(function() {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .service('meanData', meanData);\r\n\r\n  meanData.$inject = ['$http', 'authentication'];\r\n  function meanData ($http, authentication) {\r\n\r\n    var getProfile = function () {\r\n      console.log(\"getting profile\");\r\n      return $http.get('/api/profile', {\r\n        headers: {\r\n          Authorization: 'Bearer '+ authentication.getToken()\r\n        }\r\n      });\r\n    };\r\n\r\n    return {\r\n      getProfile : getProfile\r\n    };\r\n  }\r\n\r\n})();\n(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .controller('navigationCtrl', navigationCtrl);\r\n\r\n  navigationCtrl.$inject = ['$location','authentication'];\r\n  function navigationCtrl($location, authentication) {\r\n    var vm = this;\r\n\r\n    vm.isLoggedIn = authentication.isLoggedIn();\r\n\r\n    vm.currentUser = authentication.currentUser();\r\n\r\n  }\r\n\r\n})();\n(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .directive('navigation', navigation);\r\n\r\n  function navigation () {\r\n    return {\r\n      restrict: 'EA',\r\n      templateUrl: '/common/directives/navigation/navigation.template.html',\r\n      controller: 'navigationCtrl as navvm'\r\n    };\r\n  }\r\n\r\n})();"]}
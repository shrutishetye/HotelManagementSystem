{"version":3,"sources":["app.min.js"],"names":["config","$routeProvider","$locationProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","html5Mode","run","$rootScope","$location","authentication","$on","event","nextRoute","currentRoute","path","isLoggedIn","angular","module","homeCtrl","console","log","profileCtrl","meanData","vm","this","user","getProfile","success","data","error","e","$inject","roomsCtrl","$http","rooms","get","headers","Authorization","getToken","loginCtrl","credentials","email","password","onSubmit","login","err","then","registerCtrl","name","register","alert","$window","saveToken","token","localStorage","payload","split","atob","JSON","parse","exp","Date","now","currentUser","post","logout","removeItem","service","navigationCtrl","navigation","restrict","directive"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\r\n\r\n  angular.module('meanApp', ['ngRoute']);\r\n\r\n  function config ($routeProvider, $locationProvider) {\r\n    $routeProvider\r\n      .when('/', {\r\n        templateUrl: 'home/home.view.html',\r\n        controller: 'homeCtrl',\r\n        controllerAs: 'vm'\r\n      })\r\n      .when('/register', {\r\n        templateUrl: '/auth/register/register.view.html',\r\n        controller: 'registerCtrl',\r\n        controllerAs: 'vm'\r\n      })\r\n      .when('/login', {\r\n        templateUrl: '/auth/login/login.view.html',\r\n        controller: 'loginCtrl',\r\n        controllerAs: 'vm'\r\n      })\r\n      .when('/profile', {\r\n        templateUrl: '/profile/profile.view.html',\r\n        controller: 'profileCtrl',\r\n        controllerAs: 'vm'\r\n      })\r\n      .when('/rooms', {\r\n        templateUrl: '/rooms/rooms.view.html',\r\n        controller: 'roomsCtrl',\r\n        controllerAs: 'vm'\r\n      })\r\n      .otherwise({redirectTo: '/'});\r\n\r\n    // use the HTML5 History API\r\n    $locationProvider.html5Mode(true);\r\n  }\r\n\r\n  function run($rootScope, $location, authentication) {\r\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\r\n      if ($location.path() === '/profile' && !authentication.isLoggedIn()) {\r\n        $location.path('/');\r\n      }\r\n      if ($location.path() === '/rooms' && !authentication.isLoggedIn()) {\r\n        $location.path('/');\r\n      }\r\n    });\r\n  }\r\n  \r\n  angular\r\n    .module('meanApp')\r\n    .config(['$routeProvider', '$locationProvider', config])\r\n    .run(['$rootScope', '$location', 'authentication', run]);\r\n\r\n})();\n(function() {\r\n  \r\n  angular\r\n    .module('meanApp')\r\n    .controller('homeCtrl', homeCtrl);\r\n\r\n    function homeCtrl () {\r\n      console.log('Home controller is running');\r\n    }\r\n\r\n})();\n(function() {\r\n  \r\n  angular\r\n    .module('meanApp')\r\n    .controller('profileCtrl', profileCtrl);\r\n\r\n  profileCtrl.$inject = ['$location', 'meanData'];\r\n  function profileCtrl($location, meanData) {\r\n    console.log(\"profile controller is running...\");\r\n    var vm = this;\r\n\r\n    vm.user = {};\r\n\r\n    meanData.getProfile()\r\n      .success(function(data) {\r\n        console.log(\"profile controller is running...\");\r\n        vm.user = data;\r\n      })\r\n      .error(function (e) {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n})();\n(function() {\r\n  \r\n  angular\r\n    .module('meanApp')\r\n    .controller('roomsCtrl', roomsCtrl); \r\n\r\n    roomsCtrl.$inject = ['$http', 'authentication'];\r\n  function roomsCtrl($http, authentication) {\r\n    console.log(\"rooms controller is running...\");\r\n    var vm = this\r\n    vm.rooms = []\r\n    \r\n    $http.get('/api/rooms', {\r\n        headers: {\r\n          Authorization: 'Bearer '+ authentication.getToken()\r\n        }\r\n      }).success(function(data) {\r\n        console.log('response', data);\r\n        vm.rooms = data;\r\n      })\r\n      .error(function (e) {\r\n        console.log(e);\r\n      });\r\n\r\n  }\r\n    \r\n})();\r\n\r\n\r\n\r\n\r\n\n(function () {\r\n\r\n  angular\r\n  .module('meanApp')\r\n  .controller('loginCtrl', loginCtrl);\r\n\r\n  loginCtrl.$inject = ['$location', 'authentication'];\r\n  function loginCtrl($location, authentication) {\r\n    var vm = this;\r\n\r\n    vm.credentials = {\r\n      email : \"\",\r\n      password : \"\"\r\n    };\r\n\r\n    vm.onSubmit = function () {\r\n      authentication.login(vm.credentials)\r\n        .error(function(err){\r\n          console.log(err);\r\n        }).then(function(){\r\n          console.log('login sucessfull')\r\n          $location.path('profile');\r\n        });\r\n    };\r\n\r\n  }\r\n\r\n})();\n(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .controller('registerCtrl', registerCtrl);\r\n\r\n  registerCtrl.$inject = ['$location', 'authentication'];\r\n  function registerCtrl($location, authentication) {\r\n    var vm = this;\r\n\r\n    vm.credentials = {\r\n      name : \"\",\r\n      email : \"\",\r\n      password : \"\"\r\n    };\r\n\r\n    vm.onSubmit = function () {\r\n      console.log('Submitting registration');\r\n      authentication\r\n        .register(vm.credentials)\r\n        .error(function(err){\r\n          alert(err);\r\n        })\r\n        .then(function(){\r\n          $location.path('profile');\r\n        });\r\n    };\r\n\r\n  }\r\n\r\n})();\n(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .service('authentication', authentication);\r\n\r\n  authentication.$inject = ['$http', '$window'];\r\n  function authentication ($http, $window) {\r\n\r\n    var saveToken = function (token) {\r\n      console.log(\"getting token...\");\r\n      $window.localStorage['mean-token'] = token;\r\n    };\r\n\r\n    var getToken = function () {\r\n      console.log(\"getting token...\");\r\n      return $window.localStorage['mean-token'];\r\n    };\r\n\r\n    var isLoggedIn = function() {\r\n      var token = getToken();\r\n      var payload;\r\n\r\n      if(token){\r\n        payload = token.split('.')[1];\r\n        payload = $window.atob(payload);\r\n        payload = JSON.parse(payload);\r\n\r\n        return payload.exp > Date.now() / 1000;\r\n      } else {\r\n        return false;\r\n      }\r\n    };\r\n\r\n    var currentUser = function() {\r\n      if(isLoggedIn()){\r\n        var token = getToken();\r\n        var payload = token.split('.')[1];\r\n        payload = $window.atob(payload);\r\n        payload = JSON.parse(payload);\r\n        return {\r\n          email : payload.email,\r\n          name : payload.name\r\n        };\r\n      }\r\n    };\r\n\r\n    register = function(user) {\r\n      return $http.post('/api/register', user).success(function(data){\r\n        saveToken(data.token);\r\n      });\r\n    };\r\n\r\n    login = function(user) {\r\n      return $http.post('/api/login', user).success(function(data) {\r\n        saveToken(data.token);\r\n      });\r\n    };\r\n\r\n    logout = function() {\r\n      $window.localStorage.removeItem('mean-token');\r\n    };\r\n\r\n    return {\r\n      currentUser : currentUser,\r\n      saveToken : saveToken,\r\n      getToken : getToken,\r\n      isLoggedIn : isLoggedIn,\r\n      register : register,\r\n      login : login,\r\n      logout : logout\r\n    };\r\n  }\r\n\r\n\r\n})();\n(function() {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .service('meanData', meanData);\r\n\r\n  meanData.$inject = ['$http', 'authentication'];\r\n  function meanData ($http, authentication) {\r\n\r\n    var getProfile = function () {\r\n      console.log(\"getting profile\");\r\n      return $http.get('/api/profile', {\r\n        headers: {\r\n          Authorization: 'Bearer '+ authentication.getToken()\r\n        }\r\n      });\r\n    };\r\n\r\n    return {\r\n      getProfile : getProfile\r\n    };\r\n  }\r\n\r\n})();\n(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .controller('navigationCtrl', navigationCtrl);\r\n\r\n  navigationCtrl.$inject = ['$location','authentication'];\r\n  function navigationCtrl($location, authentication) {\r\n    var vm = this;\r\n\r\n    vm.isLoggedIn = authentication.isLoggedIn();\r\n\r\n    vm.currentUser = authentication.currentUser();\r\n\r\n  }\r\n\r\n})();\n(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .directive('navigation', navigation);\r\n\r\n  function navigation () {\r\n    return {\r\n      restrict: 'EA',\r\n      templateUrl: '/common/directives/navigation/navigation.template.html',\r\n      controller: 'navigationCtrl as navvm'\r\n    };\r\n  }\r\n\r\n})();"]}
{"version":3,"sources":["app.min.js"],"names":["roomsCtrl","$http","authentication","$location","console","log","vm","this","rooms","currentPage","pageSize","numberOfPages","Math","ceil","length","book","room","name","type","booked","guests","beds","cost","city","post","success","data","alert","window","location","reload","error","e","get","headers","Authorization","getToken","config","$routeProvider","$locationProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","html5Mode","run","$rootScope","$on","event","nextRoute","currentRoute","path","isLoggedIn","angular","module","app","goToAdd","store","sessionStorage","JSON","stringify","r","onSubmit","parse","homeCtrl","profileCtrl","meanData","user","getProfile","$inject","filter","input","start","slice","loginCtrl","credentials","email","password","login","err","then","cUser","currentUser","registerCtrl","register","$window","saveToken","token","localStorage","payload","split","atob","exp","Date","now","logout","removeItem","service","navigationCtrl","navigation","restrict","directive"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\r\n\r\n  angular.module('meanApp', ['ngRoute']);\r\n\r\n  function config ($routeProvider, $locationProvider) {\r\n    $routeProvider\r\n    .when('/', {\r\n      templateUrl: 'home/home.view.html',\r\n      controller: 'homeCtrl',\r\n      controllerAs: 'vm'\r\n    })\r\n    .when('/register', {\r\n      templateUrl: '/auth/register/register.view.html',\r\n      controller: 'registerCtrl',\r\n      controllerAs: 'vm'\r\n    })\r\n    .when('/login', {\r\n      templateUrl: '/auth/login/login.view.html',\r\n      controller: 'loginCtrl',\r\n      controllerAs: 'vm'\r\n    })\r\n    .when('/profile', {\r\n      templateUrl: '/profile/profile.view.html',\r\n      controller: 'profileCtrl',\r\n      controllerAs: 'vm'\r\n    })\r\n    .when('/rooms', {\r\n      templateUrl: '/rooms/rooms.view.html',\r\n      controller: 'roomsCtrl',\r\n      controllerAs: 'vm'\r\n    })\r\n    .when('/add', {\r\n      templateUrl: '/admin/add.view.html',\r\n      controller: 'addRoomCtrl',\r\n      controllerAs: 'vm'\r\n    })\r\n    .when('/roomlist', {\r\n      templateUrl: '/admin/roomlist.view.html',\r\n      controller: 'roomlistCtrl',\r\n      controllerAs: 'vm'\r\n    })\r\n    .when('/update', {\r\n      templateUrl: '/admin/update.view.html',\r\n      controller: 'updateRoomCtrl',\r\n      controllerAs: 'vm'\r\n    })\r\n    .otherwise({redirectTo: '/'});\r\n\r\n    // use the HTML5 History API\r\n    $locationProvider.html5Mode(true);\r\n  }\r\n\r\n  function run($rootScope, $location, authentication) {\r\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\r\n      if ($location.path() === '/profile' && !authentication.isLoggedIn()) {\r\n        $location.path('/');\r\n      }\r\n      if ($location.path() === '/rooms' && !authentication.isLoggedIn()) {\r\n        $location.path('/');\r\n      }\r\n    });\r\n  }\r\n  \r\n  angular\r\n  .module('meanApp')\r\n  .config(['$routeProvider', '$locationProvider', config])\r\n  .run(['$rootScope', '$location', 'authentication', run]);\r\n\r\n})();\n\r\nvar app = angular.module('meanApp')\r\n\r\napp.controller('roomlistCtrl',['$http', 'authentication', '$location', function($http, authentication, $location) {\r\n  console.log(\"roomslist controller is running...\");\r\n  var vm = this\r\n  vm.rooms = []\r\n  $http.get('/api/rooms', {\r\n    headers: {\r\n      Authorization: 'Bearer '+ authentication.getToken()\r\n    }\r\n  }).success(function(data) {\r\n    console.log('response', data);\r\n    vm.rooms = data;\r\n  })\r\n  .error(function (e) {\r\n    console.log(e);\r\n  });\r\n\r\n  vm.goToAdd = function(){\r\n    $location.path('add');\r\n  }\r\n\r\n  vm.store = function(room){\r\n    sessionStorage['room'] = JSON.stringify(room)\r\n    $location.path('update');\r\n  }\r\n\r\n  vm.delete = function(r){\r\n    $http.post('/api/admin/rooms/delete', {name: r.name}).success(function(data) {\r\n      console.log('response..', data);\r\n      window.location.reload(true);\r\n    })\r\n    .error(function (e) {\r\n      console.log('error..', e);\r\n    });\r\n  }\r\n}]);\r\n\r\n\r\n\r\napp.controller('addRoomCtrl',['$http', 'authentication', '$location', function($http, authentication, $location) {\r\n  console.log(\"add rooms controller is running...\");\r\n  var vm = this\r\n  vm.room = {\r\n    name: '',\r\n    type:  '',\r\n    booked: '',\r\n    guests: '',\r\n    beds: '',\r\n    cost: '',\r\n    city: ''\r\n  }\r\n  \r\n  vm.onSubmit = function () {\r\n    console.log('Submitting new form');\r\n    $http.post('/api/admin/rooms/add', vm.room).success(function(data) {\r\n      console.log('response..', data);\r\n      $location.path('roomlist');\r\n    })\r\n    .error(function (e) {\r\n      console.log('error..', e);\r\n    });\r\n  }\r\n\r\n}]);\r\n\r\napp.controller('updateRoomCtrl',['$http', 'authentication', '$location', function($http, authentication, $location) {\r\n  console.log(\"update rooms controller is running...\");\r\n  var vm = this\r\n  var room = JSON.parse(sessionStorage.room);\r\n  vm.room = {\r\n    name: room.name,\r\n    type:  room.type,\r\n    booked: room.booked,\r\n    guests: room.guests,\r\n    beds: room.beds,\r\n    cost: room.cost,\r\n    city: room.city\r\n  }\r\n  \r\n  vm.onSubmit = function () {\r\n    console.log('Submitting new form');\r\n    $http.post('/api/admin/rooms/update', vm.room).success(function(data) {\r\n      console.log('response..', data);\r\n      $location.path('roomlist');\r\n    })\r\n    .error(function (e) {\r\n      console.log('error..', e);\r\n    });\r\n  }\r\n\r\n}]);\r\n\n(function() {\r\n  \r\n  angular\r\n    .module('meanApp')\r\n    .controller('homeCtrl', homeCtrl);\r\n\r\n    function homeCtrl () {\r\n      console.log('Home controller is running');\r\n    }\r\n\r\n})();\n(function() {\r\n  \r\n  angular\r\n    .module('meanApp')\r\n    .controller('profileCtrl', profileCtrl);\r\n\r\n  profileCtrl.$inject = ['$location', 'meanData'];\r\n  function profileCtrl($location, meanData) {\r\n    console.log(\"profile controller is running...\");\r\n    var vm = this;\r\n\r\n    vm.user = {};\r\n\r\n    meanData.getProfile()\r\n      .success(function(data) {\r\n        console.log(\"profile controller is running...\");\r\n        vm.user = data;\r\n      })\r\n      .error(function (e) {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n})();\n\r\nvar app = angular\r\n.module('meanApp')\r\n.controller('roomsCtrl', roomsCtrl); \r\n\r\nroomsCtrl.$inject = ['$http','authentication','$location'];\r\nfunction roomsCtrl($http, authentication, $location) {\r\n  console.log(\"rooms controller is running...\");\r\n  var vm = this\r\n  vm.rooms = []\r\n  vm.currentPage = 0;\r\n  vm.pageSize = 5;\r\n  vm.numberOfPages=function(){\r\n    return Math.ceil(vm.rooms.length/vm.pageSize);                \r\n  }\r\n  \r\n  vm.book = function(room){\r\n    vm.room = {\r\n      name: room.name,\r\n      type:  room.type,\r\n      booked: true,\r\n      guests: room.guests,\r\n      beds: room.beds,\r\n      cost: room.cost,\r\n      city: room.city\r\n    }\r\n    $http.post('/api/admin/rooms/update', vm.room).success(function(data) {\r\n      alert(\"booked successfully\");\r\n      window.location.reload(true);\r\n    })\r\n    .error(function (e) {\r\n      console.log('error..', e);\r\n    });\r\n  }\r\n\r\n  $http.get('/api/availability', {\r\n    headers: {\r\n      Authorization: 'Bearer '+ authentication.getToken()\r\n    }\r\n  }).success(function(data) {\r\n    console.log('response', data);\r\n    vm.rooms = data;\r\n  })\r\n  .error(function (e) {\r\n    console.log(e);\r\n  });\r\n}\r\n\r\napp.filter('startFrom', function() {\r\n  return function(input, start) {\r\n        start = +start; //parse to int\r\n        return input.slice(start);\r\n      }\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n(function () {\r\n\r\n  angular\r\n  .module('meanApp')\r\n  .controller('loginCtrl', loginCtrl);\r\n\r\n  loginCtrl.$inject = ['$location', 'authentication'];\r\n  function loginCtrl($location, authentication) {\r\n    var vm = this;\r\n\r\n    vm.credentials = {\r\n      email : \"\",\r\n      password : \"\"\r\n    };\r\n\r\n    vm.onSubmit = function () {\r\n      authentication.login(vm.credentials)\r\n      .error(function(err){\r\n        console.log(err);\r\n      }).then(function(){\r\n        console.log('login sucessfull')\r\n        var cUser = authentication.currentUser()\r\n        if(cUser.email == 'admin@staytoday.com'){\r\n          $location.path('roomlist');\r\n        }else{\r\n          sessionStorage['user'] = JSON.stringify(cUser)\r\n          $location.path('rooms');\r\n        }\r\n      });\r\n    };\r\n\r\n  }\r\n\r\n})();\n(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .controller('registerCtrl', registerCtrl);\r\n\r\n  registerCtrl.$inject = ['$location', 'authentication'];\r\n  function registerCtrl($location, authentication) {\r\n    var vm = this;\r\n\r\n    vm.credentials = {\r\n      name : \"\",\r\n      email : \"\",\r\n      password : \"\"\r\n    };\r\n\r\n    vm.onSubmit = function () {\r\n      console.log('Submitting registration');\r\n      authentication\r\n        .register(vm.credentials)\r\n        .error(function(err){\r\n          alert(\"User already exists\");\r\n        })\r\n        .then(function(){\r\n          $location.path('profile');\r\n        });\r\n    };\r\n\r\n  }\r\n\r\n})();\n(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .service('authentication', authentication);\r\n\r\n  authentication.$inject = ['$http', '$window'];\r\n  function authentication ($http, $window) {\r\n\r\n    var saveToken = function (token) {\r\n      console.log(\"getting token...\");\r\n      $window.localStorage['mean-token'] = token;\r\n    };\r\n\r\n    var getToken = function () {\r\n      console.log(\"getting token...\");\r\n      return $window.localStorage['mean-token'];\r\n    };\r\n\r\n    var isLoggedIn = function() {\r\n      var token = getToken();\r\n      var payload;\r\n\r\n      if(token){\r\n        payload = token.split('.')[1];\r\n        payload = $window.atob(payload);\r\n        payload = JSON.parse(payload);\r\n\r\n        return payload.exp > Date.now() / 1000;\r\n      } else {\r\n        return false;\r\n      }\r\n    };\r\n\r\n    var currentUser = function() {\r\n      if(isLoggedIn()){\r\n        var token = getToken();\r\n        var payload = token.split('.')[1];\r\n        payload = $window.atob(payload);\r\n        payload = JSON.parse(payload);\r\n        return {\r\n          email : payload.email,\r\n          name : payload.name\r\n        };\r\n      }\r\n    };\r\n\r\n    register = function(user) {\r\n      return $http.post('/api/register', user).success(function(data){\r\n        saveToken(data.token);\r\n      });\r\n    };\r\n\r\n    login = function(user) {\r\n      return $http.post('/api/login', user).success(function(data) {\r\n        saveToken(data.token);\r\n      });\r\n    };\r\n\r\n    logout = function() {\r\n      $window.localStorage.removeItem('mean-token');\r\n    };\r\n\r\n    return {\r\n      currentUser : currentUser,\r\n      saveToken : saveToken,\r\n      getToken : getToken,\r\n      isLoggedIn : isLoggedIn,\r\n      register : register,\r\n      login : login,\r\n      logout : logout\r\n    };\r\n  }\r\n\r\n\r\n})();\n(function() {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .service('meanData', meanData);\r\n\r\n  meanData.$inject = ['$http', 'authentication'];\r\n  function meanData ($http, authentication) {\r\n\r\n    var getProfile = function () {\r\n      console.log(\"getting profile\");\r\n      return $http.get('/api/profile', {\r\n        headers: {\r\n          Authorization: 'Bearer '+ authentication.getToken()\r\n        }\r\n      });\r\n    };\r\n\r\n    return {\r\n      getProfile : getProfile\r\n    };\r\n  }\r\n\r\n})();\n(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .controller('navigationCtrl', navigationCtrl);\r\n\r\n  navigationCtrl.$inject = ['$location','authentication'];\r\n  function navigationCtrl($location, authentication) {\r\n    var vm = this;\r\n\r\n    vm.isLoggedIn = authentication.isLoggedIn();\r\n\r\n    vm.currentUser = authentication.currentUser();\r\n\r\n  }\r\n\r\n})();\n(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .directive('navigation', navigation);\r\n\r\n  function navigation () {\r\n    return {\r\n      restrict: 'EA',\r\n      templateUrl: '/common/directives/navigation/navigation.template.html',\r\n      controller: 'navigationCtrl as navvm'\r\n    };\r\n  }\r\n\r\n})();"]}
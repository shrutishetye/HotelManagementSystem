{"version":3,"sources":["app.min.js"],"names":["roomsCtrl","$http","authentication","$location","console","log","vm","this","rooms","currentPage","pageSize","numberOfPages","Math","ceil","length","book","room","name","type","booked","guests","beds","post","success","data","alert","path","error","e","get","headers","Authorization","getToken","config","$routeProvider","$locationProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","html5Mode","run","$rootScope","$on","event","nextRoute","currentRoute","isLoggedIn","angular","module","app","goToAdd","store","sessionStorage","JSON","stringify","r","onSubmit","parse","homeCtrl","profileCtrl","meanData","user","getProfile","$inject","filter","input","start","slice","$window","saveToken","token","localStorage","payload","split","atob","exp","Date","now","currentUser","email","register","login","logout","removeItem","service","loginCtrl","credentials","password","err","then","cUser","registerCtrl","navigationCtrl","navigation","restrict","directive"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\r\n\r\n  angular.module('meanApp', ['ngRoute']);\r\n\r\n  function config ($routeProvider, $locationProvider) {\r\n    $routeProvider\r\n    .when('/', {\r\n      templateUrl: 'home/home.view.html',\r\n      controller: 'homeCtrl',\r\n      controllerAs: 'vm'\r\n    })\r\n    .when('/register', {\r\n      templateUrl: '/auth/register/register.view.html',\r\n      controller: 'registerCtrl',\r\n      controllerAs: 'vm'\r\n    })\r\n    .when('/login', {\r\n      templateUrl: '/auth/login/login.view.html',\r\n      controller: 'loginCtrl',\r\n      controllerAs: 'vm'\r\n    })\r\n    .when('/profile', {\r\n      templateUrl: '/profile/profile.view.html',\r\n      controller: 'profileCtrl',\r\n      controllerAs: 'vm'\r\n    })\r\n    .when('/rooms', {\r\n      templateUrl: '/rooms/rooms.view.html',\r\n      controller: 'roomsCtrl',\r\n      controllerAs: 'vm'\r\n    })\r\n    .when('/add', {\r\n      templateUrl: '/admin/add.view.html',\r\n      controller: 'addRoomCtrl',\r\n      controllerAs: 'vm'\r\n    })\r\n    .when('/roomlist', {\r\n      templateUrl: '/admin/roomlist.view.html',\r\n      controller: 'roomlistCtrl',\r\n      controllerAs: 'vm'\r\n    })\r\n    .when('/update', {\r\n      templateUrl: '/admin/update.view.html',\r\n      controller: 'updateRoomCtrl',\r\n      controllerAs: 'vm'\r\n    })\r\n    .otherwise({redirectTo: '/'});\r\n\r\n    // use the HTML5 History API\r\n    $locationProvider.html5Mode(true);\r\n  }\r\n\r\n  function run($rootScope, $location, authentication) {\r\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\r\n      if ($location.path() === '/profile' && !authentication.isLoggedIn()) {\r\n        $location.path('/');\r\n      }\r\n      if ($location.path() === '/rooms' && !authentication.isLoggedIn()) {\r\n        $location.path('/');\r\n      }\r\n    });\r\n  }\r\n  \r\n  angular\r\n  .module('meanApp')\r\n  .config(['$routeProvider', '$locationProvider', config])\r\n  .run(['$rootScope', '$location', 'authentication', run]);\r\n\r\n})();\n\r\nvar app = angular.module('meanApp')\r\n\r\napp.controller('roomlistCtrl',['$http', 'authentication', '$location', function($http, authentication, $location) {\r\n  console.log(\"roomslist controller is running...\");\r\n  var vm = this\r\n  vm.rooms = []\r\n  $http.get('/api/rooms', {\r\n    headers: {\r\n      Authorization: 'Bearer '+ authentication.getToken()\r\n    }\r\n  }).success(function(data) {\r\n    console.log('response', data);\r\n    vm.rooms = data;\r\n  })\r\n  .error(function (e) {\r\n    console.log(e);\r\n  });\r\n\r\n  vm.goToAdd = function(){\r\n    $location.path('add');\r\n  }\r\n\r\n  vm.store = function(room){\r\n    console.log(room)\r\n    sessionStorage['room'] = JSON.stringify(room)\r\n     $location.path('update');\r\n  }\r\n\r\n  vm.delete = function(r){\r\n    $http.post('/api/admin/rooms/delete', {name: r.name}).success(function(data) {\r\n      console.log('response..', data);\r\n      $location.path('roomlist');\r\n    })\r\n    .error(function (e) {\r\n      console.log('error..', e);\r\n    });\r\n  }\r\n}]);\r\n\r\n\r\n\r\napp.controller('addRoomCtrl',['$http', 'authentication', '$location', function($http, authentication, $location) {\r\n  console.log(\"add rooms controller is running...\");\r\n  var vm = this\r\n  vm.room = {\r\n    name: '',\r\n    type:  '',\r\n    booked: '',\r\n    guests: '',\r\n    beds: ''\r\n  }\r\n  \r\n  vm.onSubmit = function () {\r\n    console.log('Submitting new form');\r\n    $http.post('/api/admin/rooms/add', vm.room).success(function(data) {\r\n      console.log('response..', data);\r\n      $location.path('roomlist');\r\n    })\r\n    .error(function (e) {\r\n      console.log('error..', e);\r\n    });\r\n  }\r\n\r\n}]);\r\n\r\napp.controller('updateRoomCtrl',['$http', 'authentication', '$location', function($http, authentication, $location) {\r\n  console.log(\"add rooms controller is running...\");\r\n  var vm = this\r\n  var room = JSON.parse(sessionStorage.room);\r\n  vm.room = {\r\n    name: room.name,\r\n    type:  room.type,\r\n    booked: room.booked,\r\n    guests: room.guests,\r\n    beds: room.beds\r\n  }\r\n  \r\n  vm.onSubmit = function () {\r\n    console.log('Submitting new form');\r\n    $http.post('/api/admin/rooms/update', vm.room).success(function(data) {\r\n      console.log('response..', data);\r\n      $location.path('roomlist');\r\n    })\r\n    .error(function (e) {\r\n      console.log('error..', e);\r\n    });\r\n  }\r\n\r\n}]);\r\n\n(function() {\r\n  \r\n  angular\r\n    .module('meanApp')\r\n    .controller('homeCtrl', homeCtrl);\r\n\r\n    function homeCtrl () {\r\n      console.log('Home controller is running');\r\n    }\r\n\r\n})();\n(function() {\r\n  \r\n  angular\r\n    .module('meanApp')\r\n    .controller('profileCtrl', profileCtrl);\r\n\r\n  profileCtrl.$inject = ['$location', 'meanData'];\r\n  function profileCtrl($location, meanData) {\r\n    console.log(\"profile controller is running...\");\r\n    var vm = this;\r\n\r\n    vm.user = {};\r\n\r\n    meanData.getProfile()\r\n      .success(function(data) {\r\n        console.log(\"profile controller is running...\");\r\n        vm.user = data;\r\n      })\r\n      .error(function (e) {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n})();\n\r\nvar app = angular\r\n.module('meanApp')\r\n.controller('roomsCtrl', roomsCtrl); \r\n\r\nroomsCtrl.$inject = ['$http','authentication','$location'];\r\nfunction roomsCtrl($http, authentication, $location) {\r\n  console.log(\"rooms controller is running...\");\r\n  var vm = this\r\n  vm.rooms = []\r\n  vm.currentPage = 0;\r\n  vm.pageSize = 5;\r\n  vm.numberOfPages=function(){\r\n    return Math.ceil(vm.rooms.length/vm.pageSize);                \r\n  }\r\n  \r\n  vm.book = function(room){\r\n    vm.room = {\r\n      name: room.name,\r\n      type:  room.type,\r\n      booked: 'Yes',\r\n      guests: room.guests,\r\n      beds: room.beds\r\n    }\r\n    $http.post('/api/admin/rooms/update', vm.room).success(function(data) {\r\n      alert(\"booked successfully\");\r\n      $location.path('rooms')\r\n    })\r\n    .error(function (e) {\r\n      console.log('error..', e);\r\n    });\r\n  }\r\n\r\n  $http.get('/api/rooms', {\r\n    headers: {\r\n      Authorization: 'Bearer '+ authentication.getToken()\r\n    }\r\n  }).success(function(data) {\r\n    console.log('response', data);\r\n    vm.rooms = data;\r\n  })\r\n  .error(function (e) {\r\n    console.log(e);\r\n  });\r\n}\r\n\r\napp.filter('startFrom', function() {\r\n  return function(input, start) {\r\n        start = +start; //parse to int\r\n        return input.slice(start);\r\n      }\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .service('authentication', authentication);\r\n\r\n  authentication.$inject = ['$http', '$window'];\r\n  function authentication ($http, $window) {\r\n\r\n    var saveToken = function (token) {\r\n      console.log(\"getting token...\");\r\n      $window.localStorage['mean-token'] = token;\r\n    };\r\n\r\n    var getToken = function () {\r\n      console.log(\"getting token...\");\r\n      return $window.localStorage['mean-token'];\r\n    };\r\n\r\n    var isLoggedIn = function() {\r\n      var token = getToken();\r\n      var payload;\r\n\r\n      if(token){\r\n        payload = token.split('.')[1];\r\n        payload = $window.atob(payload);\r\n        payload = JSON.parse(payload);\r\n\r\n        return payload.exp > Date.now() / 1000;\r\n      } else {\r\n        return false;\r\n      }\r\n    };\r\n\r\n    var currentUser = function() {\r\n      if(isLoggedIn()){\r\n        var token = getToken();\r\n        var payload = token.split('.')[1];\r\n        payload = $window.atob(payload);\r\n        payload = JSON.parse(payload);\r\n        return {\r\n          email : payload.email,\r\n          name : payload.name\r\n        };\r\n      }\r\n    };\r\n\r\n    register = function(user) {\r\n      return $http.post('/api/register', user).success(function(data){\r\n        saveToken(data.token);\r\n      });\r\n    };\r\n\r\n    login = function(user) {\r\n      return $http.post('/api/login', user).success(function(data) {\r\n        saveToken(data.token);\r\n      });\r\n    };\r\n\r\n    logout = function() {\r\n      $window.localStorage.removeItem('mean-token');\r\n    };\r\n\r\n    return {\r\n      currentUser : currentUser,\r\n      saveToken : saveToken,\r\n      getToken : getToken,\r\n      isLoggedIn : isLoggedIn,\r\n      register : register,\r\n      login : login,\r\n      logout : logout\r\n    };\r\n  }\r\n\r\n\r\n})();\n(function() {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .service('meanData', meanData);\r\n\r\n  meanData.$inject = ['$http', 'authentication'];\r\n  function meanData ($http, authentication) {\r\n\r\n    var getProfile = function () {\r\n      console.log(\"getting profile\");\r\n      return $http.get('/api/profile', {\r\n        headers: {\r\n          Authorization: 'Bearer '+ authentication.getToken()\r\n        }\r\n      });\r\n    };\r\n\r\n    return {\r\n      getProfile : getProfile\r\n    };\r\n  }\r\n\r\n})();\n(function () {\r\n\r\n  angular\r\n  .module('meanApp')\r\n  .controller('loginCtrl', loginCtrl);\r\n\r\n  loginCtrl.$inject = ['$location', 'authentication'];\r\n  function loginCtrl($location, authentication) {\r\n    var vm = this;\r\n\r\n    vm.credentials = {\r\n      email : \"\",\r\n      password : \"\"\r\n    };\r\n\r\n    vm.onSubmit = function () {\r\n      authentication.login(vm.credentials)\r\n      .error(function(err){\r\n        console.log(err);\r\n      }).then(function(){\r\n        console.log('login sucessfull')\r\n        var cUser = authentication.currentUser()\r\n        if(cUser.email == 'admin@staytoday.com'){\r\n          $location.path('roomlist');\r\n        }else{\r\n          $location.path('rooms');\r\n        }\r\n      });\r\n    };\r\n\r\n  }\r\n\r\n})();\n(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .controller('registerCtrl', registerCtrl);\r\n\r\n  registerCtrl.$inject = ['$location', 'authentication'];\r\n  function registerCtrl($location, authentication) {\r\n    var vm = this;\r\n\r\n    vm.credentials = {\r\n      name : \"\",\r\n      email : \"\",\r\n      password : \"\"\r\n    };\r\n\r\n    vm.onSubmit = function () {\r\n      console.log('Submitting registration');\r\n      authentication\r\n        .register(vm.credentials)\r\n        .error(function(err){\r\n          alert(err);\r\n        })\r\n        .then(function(){\r\n          $location.path('profile');\r\n        });\r\n    };\r\n\r\n  }\r\n\r\n})();\n(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .controller('navigationCtrl', navigationCtrl);\r\n\r\n  navigationCtrl.$inject = ['$location','authentication'];\r\n  function navigationCtrl($location, authentication) {\r\n    var vm = this;\r\n\r\n    vm.isLoggedIn = authentication.isLoggedIn();\r\n\r\n    vm.currentUser = authentication.currentUser();\r\n\r\n  }\r\n\r\n})();\n(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .directive('navigation', navigation);\r\n\r\n  function navigation () {\r\n    return {\r\n      restrict: 'EA',\r\n      templateUrl: '/common/directives/navigation/navigation.template.html',\r\n      controller: 'navigationCtrl as navvm'\r\n    };\r\n  }\r\n\r\n})();"]}
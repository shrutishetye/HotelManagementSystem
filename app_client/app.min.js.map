{"version":3,"sources":["app.min.js"],"names":["roomsCtrl","$http","authentication","$location","console","log","vm","this","rooms","currentPage","pageSize","numberOfPages","Math","ceil","length","book","room","name","type","booked","guests","beds","cost","city","cUser","JSON","parse","sessionStorage","user","post","success","data","broom","email","d","alert","path","error","e","window","location","reload","get","headers","Authorization","getToken","config","$routeProvider","$locationProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","html5Mode","run","$rootScope","$on","event","nextRoute","currentRoute","isLoggedIn","angular","module","app","goToAdd","store","stringify","r","onSubmit","homeCtrl","profileCtrl","meanData","bookings","getProfile","$inject","filter","input","start","slice","loginCtrl","credentials","password","login","err","then","currentUser","registerCtrl","register","$window","saveToken","token","localStorage","payload","split","atob","exp","Date","now","logout","removeItem","service","navigationCtrl","navigation","restrict","directive"],"mappings":"AAuNA,QAASA,WAAUC,EAAOC,EAAgBC,GACxCC,QAAQC,IAAI,iCACZ,IAAIC,GAAKC,IACTD,GAAGE,SACHF,EAAGG,YAAc,EACjBH,EAAGI,SAAW,EACdJ,EAAGK,cAAc,WACf,MAAOC,MAAKC,KAAKP,EAAGE,MAAMM,OAAOR,EAAGI,WAGtCJ,EAAGS,KAAO,SAASC,GACjBV,EAAGU,MACDC,KAAMD,EAAKC,KACXC,KAAOF,EAAKE,KACZC,QAAQ,EACRC,OAAQJ,EAAKI,OACbC,KAAML,EAAKK,KACXC,KAAMN,EAAKM,KACXC,KAAMP,EAAKO,KAEb,IAAIC,GAAQC,KAAKC,MAAMC,eAAeC,KACtC3B,GAAM4B,KAAK,0BAA2BvB,EAAGU,MAAMc,QAAQ,SAASC,GAC9D,GAAIC,IAASC,MAAOT,EAAMS,MAAOjB,KAAMV,EAAGU,KAAKC,KAC/ChB,GAAM4B,KAAK,kBAAmBG,GAAOF,QAAQ,SAASI,GACpDC,MAAM,8CACNhC,EAAUiC,KAAK,aAEhBC,MAAM,SAAUC,GACflC,QAAQC,IAAI,UAAWiC,OAG1BD,MAAM,SAAUC,GACfH,MAAM,oDACNI,OAAOC,SAASC,QAAO,GACvBrC,QAAQC,IAAI,UAAWiC,MAI3BrC,EAAMyC,IAAI,qBACRC,SACEC,cAAe,UAAW1C,EAAe2C,cAE1Cf,QAAQ,SAASC,GAClB3B,QAAQC,IAAI,WAAY0B,GACxBzB,EAAGE,MAAQuB,IAEZM,MAAM,SAAUC,GACflC,QAAQC,IAAIiC,MAtQhB,WAIE,QAASQ,GAAQC,EAAgBC,GAC/BD,EACCE,KAAK,KACJC,YAAa,sBACbC,WAAY,WACZC,aAAc,OAEfH,KAAK,aACJC,YAAa,oCACbC,WAAY,eACZC,aAAc,OAEfH,KAAK,UACJC,YAAa,8BACbC,WAAY,YACZC,aAAc,OAEfH,KAAK,YACJC,YAAa,6BACbC,WAAY,cACZC,aAAc,OAEfH,KAAK,UACJC,YAAa,yBACbC,WAAY,YACZC,aAAc,OAEfH,KAAK,QACJC,YAAa,uBACbC,WAAY,cACZC,aAAc,OAEfH,KAAK,aACJC,YAAa,4BACbC,WAAY,eACZC,aAAc,OAEfH,KAAK,WACJC,YAAa,0BACbC,WAAY,iBACZC,aAAc,OAEfC,WAAWC,WAAY,MAGxBN,EAAkBO,WAAU,GAG9B,QAASC,GAAIC,EAAYtD,EAAWD,GAClCuD,EAAWC,IAAI,oBAAqB,SAASC,EAAOC,EAAWC,GACpC,aAArB1D,EAAUiC,QAA0BlC,EAAe4D,cACrD3D,EAAUiC,KAAK,KAEQ,WAArBjC,EAAUiC,QAAwBlC,EAAe4D,cACnD3D,EAAUiC,KAAK,OAxDrB2B,QAAQC,OAAO,WAAY,YA6D3BD,QACCC,OAAO,WACPlB,QAAQ,iBAAkB,oBAAqBA,IAC/CU,KAAK,aAAc,YAAa,iBAAkBA,MAIrD,IAAIS,KAAMF,QAAQC,OAAO,UAEzBC,KAAId,WAAW,gBAAgB,QAAS,iBAAkB,YAAa,SAASlD,EAAOC,EAAgBC,GACrGC,QAAQC,IAAI,qCACZ,IAAIC,GAAKC,IACTD,GAAGE,SACHP,EAAMyC,IAAI,cACRC,SACEC,cAAe,UAAW1C,EAAe2C,cAE1Cf,QAAQ,SAASC,GAClB3B,QAAQC,IAAI,WAAY0B,GACxBzB,EAAGE,MAAQuB,IAEZM,MAAM,SAAUC,GACflC,QAAQC,IAAIiC,KAGdhC,EAAG4D,QAAU,WACX/D,EAAUiC,KAAK,QAGjB9B,EAAG6D,MAAQ,SAASnD,GAClBW,eAAqB,KAAIF,KAAK2C,UAAUpD,GACxCb,EAAUiC,KAAK,WAGjB9B,EAAAA,UAAY,SAAS+D,GACnBpE,EAAM4B,KAAK,2BAA4BZ,KAAMoD,EAAEpD,OAAOa,QAAQ,SAASC,GACrE3B,QAAQC,IAAI,aAAc0B,GAC1BQ,OAAOC,SAASC,QAAO,KAExBJ,MAAM,SAAUC,GACflC,QAAQC,IAAI,UAAWiC,SAO7B2B,IAAId,WAAW,eAAe,QAAS,iBAAkB,YAAa,SAASlD,EAAOC,EAAgBC,GACpGC,QAAQC,IAAI,qCACZ,IAAIC,GAAKC,IACTD,GAAGU,MACDC,KAAM,GACNC,KAAO,GACPC,OAAQ,GACRC,OAAQ,GACRC,KAAM,GACNC,KAAM,GACNC,KAAM,IAGRjB,EAAGgE,SAAW,WACZlE,QAAQC,IAAI,uBACZJ,EAAM4B,KAAK,uBAAwBvB,EAAGU,MAAMc,QAAQ,SAASC,GAC3D3B,QAAQC,IAAI,aAAc0B,GAC1B5B,EAAUiC,KAAK,cAEhBC,MAAM,SAAUC,GACflC,QAAQC,IAAI,UAAWiC,SAM7B2B,IAAId,WAAW,kBAAkB,QAAS,iBAAkB,YAAa,SAASlD,EAAOC,EAAgBC,GACvGC,QAAQC,IAAI,wCACZ,IAAIC,GAAKC,KACLS,EAAOS,KAAKC,MAAMC,eAAeX,KACrCV,GAAGU,MACDC,KAAMD,EAAKC,KACXC,KAAOF,EAAKE,KACZC,OAAQH,EAAKG,OACbC,OAAQJ,EAAKI,OACbC,KAAML,EAAKK,KACXC,KAAMN,EAAKM,KACXC,KAAMP,EAAKO,MAGbjB,EAAGgE,SAAW,WACZlE,QAAQC,IAAI,uBACZJ,EAAM4B,KAAK,0BAA2BvB,EAAGU,MAAMc,QAAQ,SAASC,GAC9D3B,QAAQC,IAAI,aAAc0B,GAC1B5B,EAAUiC,KAAK,cAEhBC,MAAM,SAAUC,GACflC,QAAQC,IAAI,UAAWiC,SAM7B,WAMI,QAASiC,KACPnE,QAAQC,IAAI,8BALhB0D,QACGC,OAAO,WACPb,WAAW,WAAYoB,MAO5B,WAOE,QAASC,GAAYrE,EAAWF,EAAOwE,GACrCrE,QAAQC,IAAI,mCACZ,IAAIC,GAAKC,IAETD,GAAGsB,QACHtB,EAAGoE,YAEHD,EAASE,aACR7C,QAAQ,SAASC,GAChB3B,QAAQC,IAAI,oCACZC,EAAGsB,KAAOG,IAEXM,MAAM,SAAUC,GACflC,QAAQC,IAAIiC,IAGb,IAAId,GAAQC,KAAKC,MAAMC,eAAeC,KAEvC3B,GAAM4B,KAAK,iBAAmBI,MAAOT,EAAMS,QAASH,QAAQ,SAASC,GACnE3B,QAAQC,IAAI,oBAAqB0B,GACjCzB,EAAGoE,SAAW3C,IAEfM,MAAM,SAAUC,GACflC,QAAQC,IAAIiC,KA5BhByB,QACCC,OAAO,WACPb,WAAW,cAAeqB,GAE3BA,EAAYI,SAAW,YAAa,QAAS,cA8B/C,IAAIX,KAAMF,QACTC,OAAO,WACPb,WAAW,YAAanD,UAEzBA,WAAU4E,SAAW,QAAQ,iBAAiB,aAoD9CX,IAAIY,OAAO,YAAa,WACtB,MAAO,UAASC,EAAOC,GAEjB,MADAA,IAASA,EACFD,EAAME,MAAMD,MAU3B,WAOE,QAASE,GAAU9E,EAAWD,GAC5B,GAAII,GAAKC,IAETD,GAAG4E,aACDjD,MAAQ,GACRkD,SAAW,IAGb7E,EAAGgE,SAAW,WACZpE,EAAekF,MAAM9E,EAAG4E,aACvB7C,MAAM,SAASgD,GACdjF,QAAQC,IAAIgF,KACXC,KAAK,WACNlF,QAAQC,IAAI,mBACZ,IAAImB,GAAQtB,EAAeqF,aACT,wBAAf/D,EAAMS,MACP9B,EAAUiC,KAAK,aAEfT,eAAqB,KAAIF,KAAK2C,UAAU5C,GACxCrB,EAAUiC,KAAK,aAxBvB2B,QACCC,OAAO,WACPb,WAAW,YAAa8B,GAEzBA,EAAUL,SAAW,YAAa,qBA4BpC,WAOE,QAASY,GAAarF,EAAWD,GAC/B,GAAII,GAAKC,IAETD,GAAG4E,aACDjE,KAAO,GACPgB,MAAQ,GACRkD,SAAW,IAGb7E,EAAGgE,SAAW,WACZlE,QAAQC,IAAI,2BACZH,EACGuF,SAASnF,EAAG4E,aACZ7C,MAAM,SAASgD,GACdlD,MAAM,yBAEPmD,KAAK,WACJnF,EAAUiC,KAAK,cAtBvB2B,QACGC,OAAO,WACPb,WAAW,eAAgBqC,GAE9BA,EAAaZ,SAAW,YAAa,qBAyBvC,WAOE,QAAS1E,GAAgBD,EAAOyF,GAE9B,GAAIC,GAAY,SAAUC,GACxBxF,QAAQC,IAAI,oBACZqF,EAAQG,aAAa,cAAgBD,GAGnC/C,EAAW,WAEb,MADAzC,SAAQC,IAAI,oBACLqF,EAAQG,aAAa,eAG1B/B,EAAa,WACf,GACIgC,GADAF,EAAQ/C,GAGZ,SAAG+C,IACDE,EAAUF,EAAMG,MAAM,KAAK,GAC3BD,EAAUJ,EAAQM,KAAKF,GACvBA,EAAUrE,KAAKC,MAAMoE,GAEdA,EAAQG,IAAMC,KAAKC,MAAQ,MAMlCZ,EAAc,WAChB,GAAGzB,IAAa,CACd,GAAI8B,GAAQ/C,IACRiD,EAAUF,EAAMG,MAAM,KAAK,EAG/B,OAFAD,GAAUJ,EAAQM,KAAKF,GACvBA,EAAUrE,KAAKC,MAAMoE,IAEnB7D,MAAQ6D,EAAQ7D,MAChBhB,KAAO6E,EAAQ7E,OAqBrB,OAhBAwE,UAAW,SAAS7D,GAClB,MAAO3B,GAAM4B,KAAK,gBAAiBD,GAAME,QAAQ,SAASC,GACxD4D,EAAU5D,EAAK6D,UAInBR,MAAQ,SAASxD,GACf,MAAO3B,GAAM4B,KAAK,aAAcD,GAAME,QAAQ,SAASC,GACrD4D,EAAU5D,EAAK6D,UAInBQ,OAAS,WACPV,EAAQG,aAAaQ,WAAW,gBAIhCd,YAAcA,EACdI,UAAYA,EACZ9C,SAAWA,EACXiB,WAAaA,EACb2B,SAAWA,SACXL,MAAQA,MACRgB,OAASA,QApEbrC,QACGC,OAAO,WACPsC,QAAQ,iBAAkBpG,GAE7BA,EAAe0E,SAAW,QAAS,cAsErC,WAOE,QAASH,GAAUxE,EAAOC,GAExB,GAAIyE,GAAa,WAEf,MADAvE,SAAQC,IAAI,mBACLJ,EAAMyC,IAAI,gBACfC,SACEC,cAAe,UAAW1C,EAAe2C,cAK/C,QACE8B,WAAaA,GAjBjBZ,QACGC,OAAO,WACPsC,QAAQ,WAAY7B,GAEvBA,EAASG,SAAW,QAAS,qBAkB/B,WAOE,QAAS2B,GAAepG,EAAWD,GACjC,GAAII,GAAKC,IAETD,GAAGwD,WAAa5D,EAAe4D,aAE/BxD,EAAGiF,YAAcrF,EAAeqF,cAVlCxB,QACGC,OAAO,WACPb,WAAW,iBAAkBoD,GAEhCA,EAAe3B,SAAW,YAAY,qBAWxC,WAME,QAAS4B,KACP,OACEC,SAAU,KACVvD,YAAa,yDACbC,WAAY,2BARhBY,QACGC,OAAO,WACP0C,UAAU,aAAcF","file":"app.min.js","sourcesContent":["(function () {\r\n\r\n  angular.module('meanApp', ['ngRoute']);\r\n\r\n  function config ($routeProvider, $locationProvider) {\r\n    $routeProvider\r\n    .when('/', {\r\n      templateUrl: 'home/home.view.html',\r\n      controller: 'homeCtrl',\r\n      controllerAs: 'vm'\r\n    })\r\n    .when('/register', {\r\n      templateUrl: '/auth/register/register.view.html',\r\n      controller: 'registerCtrl',\r\n      controllerAs: 'vm'\r\n    })\r\n    .when('/login', {\r\n      templateUrl: '/auth/login/login.view.html',\r\n      controller: 'loginCtrl',\r\n      controllerAs: 'vm'\r\n    })\r\n    .when('/profile', {\r\n      templateUrl: '/profile/profile.view.html',\r\n      controller: 'profileCtrl',\r\n      controllerAs: 'vm'\r\n    })\r\n    .when('/rooms', {\r\n      templateUrl: '/rooms/rooms.view.html',\r\n      controller: 'roomsCtrl',\r\n      controllerAs: 'vm'\r\n    })\r\n    .when('/add', {\r\n      templateUrl: '/admin/add.view.html',\r\n      controller: 'addRoomCtrl',\r\n      controllerAs: 'vm'\r\n    })\r\n    .when('/roomlist', {\r\n      templateUrl: '/admin/roomlist.view.html',\r\n      controller: 'roomlistCtrl',\r\n      controllerAs: 'vm'\r\n    })\r\n    .when('/update', {\r\n      templateUrl: '/admin/update.view.html',\r\n      controller: 'updateRoomCtrl',\r\n      controllerAs: 'vm'\r\n    })\r\n    .otherwise({redirectTo: '/'});\r\n\r\n    // use the HTML5 History API\r\n    $locationProvider.html5Mode(true);\r\n  }\r\n\r\n  function run($rootScope, $location, authentication) {\r\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\r\n      if ($location.path() === '/profile' && !authentication.isLoggedIn()) {\r\n        $location.path('/');\r\n      }\r\n      if ($location.path() === '/rooms' && !authentication.isLoggedIn()) {\r\n        $location.path('/');\r\n      }\r\n    });\r\n  }\r\n  \r\n  angular\r\n  .module('meanApp')\r\n  .config(['$routeProvider', '$locationProvider', config])\r\n  .run(['$rootScope', '$location', 'authentication', run]);\r\n\r\n})();\n\r\nvar app = angular.module('meanApp')\r\n\r\napp.controller('roomlistCtrl',['$http', 'authentication', '$location', function($http, authentication, $location) {\r\n  console.log(\"roomslist controller is running...\");\r\n  var vm = this\r\n  vm.rooms = []\r\n  $http.get('/api/rooms', {\r\n    headers: {\r\n      Authorization: 'Bearer '+ authentication.getToken()\r\n    }\r\n  }).success(function(data) {\r\n    console.log('response', data);\r\n    vm.rooms = data;\r\n  })\r\n  .error(function (e) {\r\n    console.log(e);\r\n  });\r\n\r\n  vm.goToAdd = function(){\r\n    $location.path('add');\r\n  }\r\n\r\n  vm.store = function(room){\r\n    sessionStorage['room'] = JSON.stringify(room)\r\n    $location.path('update');\r\n  }\r\n\r\n  vm.delete = function(r){\r\n    $http.post('/api/admin/rooms/delete', {name: r.name}).success(function(data) {\r\n      console.log('response..', data);\r\n      window.location.reload(true);\r\n    })\r\n    .error(function (e) {\r\n      console.log('error..', e);\r\n    });\r\n  }\r\n}]);\r\n\r\n\r\n\r\napp.controller('addRoomCtrl',['$http', 'authentication', '$location', function($http, authentication, $location) {\r\n  console.log(\"add rooms controller is running...\");\r\n  var vm = this\r\n  vm.room = {\r\n    name: '',\r\n    type:  '',\r\n    booked: '',\r\n    guests: '',\r\n    beds: '',\r\n    cost: '',\r\n    city: ''\r\n  }\r\n  \r\n  vm.onSubmit = function () {\r\n    console.log('Submitting new form');\r\n    $http.post('/api/admin/rooms/add', vm.room).success(function(data) {\r\n      console.log('response..', data);\r\n      $location.path('roomlist');\r\n    })\r\n    .error(function (e) {\r\n      console.log('error..', e);\r\n    });\r\n  }\r\n\r\n}]);\r\n\r\napp.controller('updateRoomCtrl',['$http', 'authentication', '$location', function($http, authentication, $location) {\r\n  console.log(\"update rooms controller is running...\");\r\n  var vm = this\r\n  var room = JSON.parse(sessionStorage.room);\r\n  vm.room = {\r\n    name: room.name,\r\n    type:  room.type,\r\n    booked: room.booked,\r\n    guests: room.guests,\r\n    beds: room.beds,\r\n    cost: room.cost,\r\n    city: room.city\r\n  }\r\n  \r\n  vm.onSubmit = function () {\r\n    console.log('Submitting new form');\r\n    $http.post('/api/admin/rooms/update', vm.room).success(function(data) {\r\n      console.log('response..', data);\r\n      $location.path('roomlist');\r\n    })\r\n    .error(function (e) {\r\n      console.log('error..', e);\r\n    });\r\n  }\r\n\r\n}]);\r\n\n(function() {\r\n  \r\n  angular\r\n    .module('meanApp')\r\n    .controller('homeCtrl', homeCtrl);\r\n\r\n    function homeCtrl () {\r\n      console.log('Home controller is running');\r\n    }\r\n\r\n})();\n(function() {\r\n\r\n  angular\r\n  .module('meanApp')\r\n  .controller('profileCtrl', profileCtrl);\r\n\r\n  profileCtrl.$inject = ['$location', '$http', 'meanData'];\r\n  function profileCtrl($location, $http, meanData) {\r\n    console.log(\"profile controller is running...\");\r\n    var vm = this;\r\n\r\n    vm.user = {};\r\n    vm.bookings = [];\r\n\r\n    meanData.getProfile()\r\n    .success(function(data) {\r\n      console.log(\"profile controller is running...\");\r\n      vm.user = data;\r\n    })\r\n    .error(function (e) {\r\n      console.log(e);\r\n    });\r\n\r\n     var cUser = JSON.parse(sessionStorage.user);\r\n\r\n    $http.post('/api/bookings', { email: cUser.email }).success(function(data) {\r\n      console.log('response bookings', data);\r\n      vm.bookings = data;\r\n    })\r\n    .error(function (e) {\r\n      console.log(e);\r\n    });\r\n  }\r\n\r\n})();\n\r\nvar app = angular\r\n.module('meanApp')\r\n.controller('roomsCtrl', roomsCtrl); \r\n\r\nroomsCtrl.$inject = ['$http','authentication','$location'];\r\nfunction roomsCtrl($http, authentication, $location) {\r\n  console.log(\"rooms controller is running...\");\r\n  var vm = this\r\n  vm.rooms = []\r\n  vm.currentPage = 0;\r\n  vm.pageSize = 5;\r\n  vm.numberOfPages=function(){\r\n    return Math.ceil(vm.rooms.length/vm.pageSize);                \r\n  }\r\n  \r\n  vm.book = function(room){\r\n    vm.room = {\r\n      name: room.name,\r\n      type:  room.type,\r\n      booked: true,\r\n      guests: room.guests,\r\n      beds: room.beds,\r\n      cost: room.cost,\r\n      city: room.city\r\n    }\r\n    var cUser = JSON.parse(sessionStorage.user);\r\n    $http.post('/api/admin/rooms/update', vm.room).success(function(data) {\r\n      var broom = {email: cUser.email, room: vm.room.name}\r\n      $http.post('/api/addbooking', broom).success(function(d) {\r\n        alert(\"Payment successfull. Booking ID: 78926AS56\");\r\n        $location.path('profile');\r\n      })\r\n      .error(function (e) {\r\n        console.log('error..', e);\r\n      })\r\n    })\r\n    .error(function (e) {\r\n      alert(\"Error occured please contact Customer Service !!\");\r\n      window.location.reload(true);\r\n      console.log('error..', e);\r\n    });\r\n  }\r\n\r\n  $http.get('/api/availability', {\r\n    headers: {\r\n      Authorization: 'Bearer '+ authentication.getToken()\r\n    }\r\n  }).success(function(data) {\r\n    console.log('response', data);\r\n    vm.rooms = data;\r\n  })\r\n  .error(function (e) {\r\n    console.log(e);\r\n  });\r\n}\r\n\r\napp.filter('startFrom', function() {\r\n  return function(input, start) {\r\n        start = +start; //parse to int\r\n        return input.slice(start);\r\n      }\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n(function () {\r\n\r\n  angular\r\n  .module('meanApp')\r\n  .controller('loginCtrl', loginCtrl);\r\n\r\n  loginCtrl.$inject = ['$location', 'authentication'];\r\n  function loginCtrl($location, authentication) {\r\n    var vm = this;\r\n\r\n    vm.credentials = {\r\n      email : \"\",\r\n      password : \"\"\r\n    };\r\n\r\n    vm.onSubmit = function () {\r\n      authentication.login(vm.credentials)\r\n      .error(function(err){\r\n        console.log(err);\r\n      }).then(function(){\r\n        console.log('login sucessfull')\r\n        var cUser = authentication.currentUser()\r\n        if(cUser.email == 'admin@staytoday.com'){\r\n          $location.path('roomlist');\r\n        }else{\r\n          sessionStorage['user'] = JSON.stringify(cUser)\r\n          $location.path('rooms');\r\n        }\r\n      });\r\n    };\r\n\r\n  }\r\n\r\n})();\n(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .controller('registerCtrl', registerCtrl);\r\n\r\n  registerCtrl.$inject = ['$location', 'authentication'];\r\n  function registerCtrl($location, authentication) {\r\n    var vm = this;\r\n\r\n    vm.credentials = {\r\n      name : \"\",\r\n      email : \"\",\r\n      password : \"\"\r\n    };\r\n\r\n    vm.onSubmit = function () {\r\n      console.log('Submitting registration');\r\n      authentication\r\n        .register(vm.credentials)\r\n        .error(function(err){\r\n          alert(\"User already exists\");\r\n        })\r\n        .then(function(){\r\n          $location.path('profile');\r\n        });\r\n    };\r\n\r\n  }\r\n\r\n})();\n(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .service('authentication', authentication);\r\n\r\n  authentication.$inject = ['$http', '$window'];\r\n  function authentication ($http, $window) {\r\n\r\n    var saveToken = function (token) {\r\n      console.log(\"getting token...\");\r\n      $window.localStorage['mean-token'] = token;\r\n    };\r\n\r\n    var getToken = function () {\r\n      console.log(\"getting token...\");\r\n      return $window.localStorage['mean-token'];\r\n    };\r\n\r\n    var isLoggedIn = function() {\r\n      var token = getToken();\r\n      var payload;\r\n\r\n      if(token){\r\n        payload = token.split('.')[1];\r\n        payload = $window.atob(payload);\r\n        payload = JSON.parse(payload);\r\n\r\n        return payload.exp > Date.now() / 1000;\r\n      } else {\r\n        return false;\r\n      }\r\n    };\r\n\r\n    var currentUser = function() {\r\n      if(isLoggedIn()){\r\n        var token = getToken();\r\n        var payload = token.split('.')[1];\r\n        payload = $window.atob(payload);\r\n        payload = JSON.parse(payload);\r\n        return {\r\n          email : payload.email,\r\n          name : payload.name\r\n        };\r\n      }\r\n    };\r\n\r\n    register = function(user) {\r\n      return $http.post('/api/register', user).success(function(data){\r\n        saveToken(data.token);\r\n      });\r\n    };\r\n\r\n    login = function(user) {\r\n      return $http.post('/api/login', user).success(function(data) {\r\n        saveToken(data.token);\r\n      });\r\n    };\r\n\r\n    logout = function() {\r\n      $window.localStorage.removeItem('mean-token');\r\n    };\r\n\r\n    return {\r\n      currentUser : currentUser,\r\n      saveToken : saveToken,\r\n      getToken : getToken,\r\n      isLoggedIn : isLoggedIn,\r\n      register : register,\r\n      login : login,\r\n      logout : logout\r\n    };\r\n  }\r\n\r\n\r\n})();\n(function() {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .service('meanData', meanData);\r\n\r\n  meanData.$inject = ['$http', 'authentication'];\r\n  function meanData ($http, authentication) {\r\n\r\n    var getProfile = function () {\r\n      console.log(\"getting profile\");\r\n      return $http.get('/api/profile', {\r\n        headers: {\r\n          Authorization: 'Bearer '+ authentication.getToken()\r\n        }\r\n      });\r\n    };\r\n\r\n    return {\r\n      getProfile : getProfile\r\n    };\r\n  }\r\n\r\n})();\n(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .controller('navigationCtrl', navigationCtrl);\r\n\r\n  navigationCtrl.$inject = ['$location','authentication'];\r\n  function navigationCtrl($location, authentication) {\r\n    var vm = this;\r\n\r\n    vm.isLoggedIn = authentication.isLoggedIn();\r\n\r\n    vm.currentUser = authentication.currentUser();\r\n\r\n  }\r\n\r\n})();\n(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .directive('navigation', navigation);\r\n\r\n  function navigation () {\r\n    return {\r\n      restrict: 'EA',\r\n      templateUrl: '/common/directives/navigation/navigation.template.html',\r\n      controller: 'navigationCtrl as navvm'\r\n    };\r\n  }\r\n\r\n})();"]}